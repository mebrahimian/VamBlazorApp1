@page "/priorityrep"
@inject DatabaseContext _Db
@inject SandoghService SandoghService
@inject VamBlazor.Client.Application.Services.PersonServices PersonServices
@layout MainLayoutReports
@inject NavigationManager Navigation
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@inject DateService DateService

@using Microsoft.EntityFrameworkCore;
@using MudBlazor
@using VamBlazor.Client.Application.Dtos
@using VamBlazor.Client.Application.Services
@using VamBlazor.Client.Application.CommonFunc
@using VamBlazor.Client.Domain.Entities



<!-- دکمه برای چاپ گزارش -->

<MudButton @onclick="PrintReport" Variant="Variant.Filled"
Class="ma-0 pa-0"
StartIcon="@Icons.Material.Filled.Print"
IconColor="Color.Primary"
Style="@($"display:{(isButtonVisible ? "flex" : "none")};width:100px")">
    چاپ گزارش
</MudButton>

@if (isLoading)
{
    <div style="
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background-color: rgba(255,255,255,0.7);
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        z-index: 9999;
    ">
        <MudProgressCircular Color="Color.Primary" Size="Size.Large" Indeterminate="true" />
        <div class="text-center mt-2">⏳ لطفاً منتظر بمانید...</div>
    </div>
}

@if (@ReportRecords.Any())
{
    var firstRow = @ReportRecords.First();

    <!-- این قسمت برای جلوگیری از صفحه خالی قبل از شروع رکورد اول -->

    <div style="width: 100%; margin-left:0;text-align:center">
        @SandoghName
    </div>


    <div style="display: flex; justify-content: space-between; align-items: center; width: 100%;">
        <div style="flex: 1;"></div> <!-- فضای سمت راست -->
        <div style="flex: 1; text-align: center;">
            <MudText Typo="Typo.body1">گزارش عملکرد صندوق</MudText>
        </div>
        <div style="flex: 1;">
            <span style="display: inline-block; width:20ch;"></span>
            <MudText Typo="Typo.body1">@DateService.TodayHDateString()</MudText>
        </div>

    </div>

    <!-- این خط برای جلوگیری از تداخل و شروع جدید در هر رکورد -->
    <div style="clear: both;"></div>
    <div style="display: flex; width: 100%; margin-left:0;">
        <MudTable T="vwPersonStatusCurrent" Items="@ReportRecords" Hover="true" Bordered="true" Striped="true" Dense="true" Style="width:95%; align-content:center; font-size:10px; table-layout: fixed;">
            <HeaderContent>
                <MudTh Style="width:75px;text-align:center">ردیف</MudTh> <!-- ستون شماره ردیف -->
                <MudTh Style="width:75px">ش.حساب</MudTh>
                <MudTh Style="width:250px">مشخصات سپرده گذار</MudTh>
                <MudTh Style="width:110px">موجودی</MudTh>
                <MudTh Style="width:110px">مانده وام</MudTh>
                <MudTh Style="width:110px">کسری</MudTh>
                <MudTh Style="width:110px">کارمزد</MudTh>
                <MudTh Style="width:110px">مبلغ وام</MudTh>
                <MudTh Style="width:110px">جمع کسور</MudTh>
                <MudTh Style="width:110px">وام پرداختی</MudTh>
            </HeaderContent>
            <RowTemplate>
                
                    <MudTd>@TextHelper.ConvertToPersian((ReportRecords.IndexOf(context) + 1).ToString(), false)</MudTd> <!-- شماره ردیف --> <!-- اعداد فارسی بدون کاما  -->
                    <MudTd>@TextHelper.ConvertToPersian(context.HesabNo.ToString(), false)</MudTd>
                    <MudTd>@context.FullName</MudTd>
                    <MudTd>@TextHelper.ConvertToPersian(context.Mojodi.ToString())</MudTd>
                    <MudTd>@TextHelper.ConvertToPersian((context.MblgVam-context.PaidVam).ToString("N0"))</MudTd>
                    <MudTd>@TextHelper.ConvertToPersian((long.Parse(cMinMojodi)- context.Mojodi).ToString("N0"))</MudTd>
                    <MudTd>@TextHelper.ConvertToPersian((long.Parse(cSaghfVam) * int.Parse(cPer)/100).ToString("N0"))</MudTd>
                    <MudTd>@TextHelper.ConvertToPersian((long.Parse(cSaghfVam)).ToString("N0"))</MudTd>
                    <MudTd>@TextHelper.ConvertToPersian((long.Parse(cMinMojodi) - context.Mojodi + (long.Parse(cSaghfVam) * int.Parse(cPer) / 100) + (context.MblgVam - context.PaidVam)).ToString("N0"))</MudTd>
                    <MudTd>@TextHelper.ConvertToPersian((long.Parse(cSaghfVam) - (long.Parse(cMinMojodi) - context.Mojodi + (long.Parse(cSaghfVam) * int.Parse(cPer) / 100) + (context.MblgVam - context.PaidVam))).ToString("N0"))</MudTd>

                
            </RowTemplate>
            
        </MudTable>
    </div>
    <br />
    <br />
    
   



}



@code {
    private int PageNumber { get; set; } = 1; // شماره صفحه (پیش‌فرض صفحه اول)
    private int PageSize { get; set; } = 20;  // تعداد رکوردها در هر صفحه (پیش‌فرض 20 رکورد)
    private List<vwPersonStatusCurrent> ReportRecords { get; set; }
    
    private List<IGrouping<long, PersonReportStatusDto>> groupedRecords { get; set; }
    private string CurrentPersonPictureAddress = string.Empty;
    private string SandoghName = "";
    private long? nSumAgsat = 0;
    private long? nSumPasandaz = 0;
    private string? cSaghfVam = "";
    private string? cMinMojodi = "";
    private string? cPer = "";

    public string cDate { get; set; }

    // تعریف متغیر برای ذخیره مانده سطر قبلی
    private decimal previousRemain = 0;  // متغیر برای ذخیره مانده سطر قبلی
    private long previousRemainForRow = 0L;
    private bool isTransactionTableStarted = false;
    private bool isLoading { get; set; } = true;

    protected override async Task OnInitializedAsync()
    {

        // دریافت پارامترهای URL
        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);

        cSaghfVam = GetQueryStringValue(uri, "nSaghfVam");
        cMinMojodi = GetQueryStringValue(uri, "nMinMojodi");
        cPer = GetQueryStringValue(uri, "nPer");
        cDate = DateService.TodayHDate();
        try
        {

            isLoading = true;    ///// کنترل بارگذاری داده ها
            StateHasChanged();

            ReportRecords = _Db.vwPersonStatusCurrent.OrderBy(c => c.HesabNo).ToList();
    
                        
            isLoading = false;  // اتمام بارگذاری داده ها
            StateHasChanged();

            SandoghName = SandoghService.GetSandoghName();
        }
        catch (Exception ex)
        {
            // در صورت وقوع خطا، خطا را در لاگ ذخیره یا به کاربر نمایش دهید
            _snackBar.Add($"خطا در هنگام گزارش: {ex.Message}", Severity.Error);
            // در صورت نیاز می‌توانید خطا را در لاگ ثبت کنید
            Console.Error.WriteLine(ex.ToString());  // یا ذخیره در فایل لاگ
        }
    }


    // متد کمکی برای دریافت مقدار پارامتر از URL
    private string GetQueryStringValue(Uri uri, string key)
    {
        var query = Microsoft.AspNetCore.WebUtilities.QueryHelpers.ParseQuery(uri.Query);
        return query.ContainsKey(key) ? query[key].ToString() : string.Empty;
    }
    private bool isButtonVisible = true;

    private MudTheme myTheme = new MudTheme()
        {
            Typography = new Typography()
            {
                Default = new Default()
                {
                    FontFamily = ["Vazir UI", "sans-serif"]

                }
            }
        };
    // رکورد ست شامل اطلاعات هر شخص

    // دستور چاپ با استفاده از JSInterop
    private async Task PrintReport()
    {
        isButtonVisible = !isButtonVisible;
        StateHasChanged();
        await Task.Delay(1000);
        await JSRuntime.InvokeVoidAsync("window.printAndRedirect", "/", 500);
    }
}
