@page "/delay-rep"
@inject DatabaseContext _Db
@inject SandoghService SandoghService
@inject VamBlazor.Client.Application.Services.PersonServices PersonServices
@layout MainLayoutReports
@inject NavigationManager Navigation
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@using Microsoft.EntityFrameworkCore.Metadata.Internal
@using MudBlazor
@using VamBlazor.Client.Application.Dtos
@using VamBlazor.Client.Application.Services
@using VamBlazor.Client.Application.CommonFunc
@using VamBlazor.Client.Domain.Entities


<!-- دکمه برای چاپ گزارش -->

<MudButton @onclick="PrintReport" Variant="Variant.Filled"
Class="ma-0 pa-0"
StartIcon="@Icons.Material.Filled.Print"
IconColor="Color.Primary"
Style="@($"display:{(isButtonVisible ? "flex" : "none")};width:100px")">
    چاپ گزارش
</MudButton>
<div style="text-align:center">
    @SandoghName
    <br />
    گزارش مانده وام و موجودی حساب سپرده گذاران
</div>
<!-- این خط برای جلوگیری از تداخل و شروع جدید در هر رکورد -->
<div style="clear: both;"></div>
<div style="display: flex; width: 98%; margin-left:0;">
    <MudTable T="vwPersonStatusCurrent" Items="@ReportRecords" Hover="true" RowsPerPage="20" Bordered="true" Striped="true" Dense="true" Style="width:95%; align-items:center; font-size:10px; table-layout: fixed; padding-right: 10px;">

        <HeaderContent>
            <MudTh Style="width:75px;text-align:center">ردیف</MudTh> <!-- ستون شماره ردیف -->
            <MudTh Style="width:75px">کــد</MudTh>
            <MudTh Style="width:75px">ش.حساب</MudTh>
            <MudTh Style="width:75px">تاریخ وام</MudTh>
            <MudTh Style="width:100px">مبلغ وام</MudTh>
            <MudTh Style="width:250px"> مشخصات سپرده گذار</MudTh>
            <MudTh Style="width:110px">موجودی حساب</MudTh>
            <MudTh Style="width:100px">مانده وام</MudTh>
            <MudTh Style="width:75">ق.معوق</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd>@TextHelper.ConvertToPersian((ReportRecords.IndexOf(context) + 1).ToString(), false)</MudTd> <!-- شماره ردیف --> <!-- اعداد فارسی بدون کاما  -->
            <MudTd>@TextHelper.ConvertToPersian(context.Code, false)</MudTd>               <!-- اعداد فارسی بدون کاما  -->
            <MudTd>@TextHelper.ConvertToPersian(context.HesabNo.ToString(),false)</MudTd>  <!-- اعداد فارسی بدون کاما  -->
            <MudTd>@TextHelper.ConvertNumbersInStringToPersian(context.DateVam)</MudTd>
            <MudTd>@TextHelper.ConvertToPersian(context.MblgVam.ToString("N0"))</MudTd>
            <MudTd>@context.FullName</MudTd>
            <MudTd>@TextHelper.ConvertToPersian(context.Mojodi.ToString("N0"))</MudTd>
            <MudTd>@TextHelper.ConvertToPersian(context.RemainVam.ToString("N0"))</MudTd>
            <MudTd>@TextHelper.ConvertToPersian(context.DelayGst.ToString(),false)</MudTd>
        </RowTemplate>
        <FooterContent>
            <MudTd colspan="4" Class="text-right">جمع:</MudTd> <!-- جمع برای 4 ستون اول -->
            <MudTd>@TextHelper.ConvertToPersian(ReportRecords.Sum(x => x.MblgVam).ToString("N0"))</MudTd>  <!-- جمع مبلغ وام (ستون ۵) -->
            <MudTd></MudTd>  <!-- برای "مشخصات سپرده گذار" چیزی چاپ نمی‌شود -->
            <MudTd>@TextHelper.ConvertToPersian(ReportRecords.Sum(x => x.Mojodi).ToString("N0"))</MudTd>  <!-- جمع موجودی حساب (ستون ۷) -->
            <MudTd>@TextHelper.ConvertToPersian(ReportRecords.Sum(x => x.RemainVam).ToString("N0"))</MudTd>  <!-- جمع مانده وام (ستون ۸) -->
            <MudTd>@TextHelper.ConvertToPersian(ReportRecords.Sum(x => x.DelayGst).ToString("N0"))</MudTd>  <!-- جمع ق.معوق -->
        </FooterContent>

    </MudTable>
</div>



<br />
<div style="page-break-after: always;"></div>

@code {
    private int PageNumber { get; set; } = 1; // شماره صفحه (پیش‌فرض صفحه اول)
    private int PageSize { get; set; } = 20;  // تعداد رکوردها در هر صفحه (پیش‌فرض 20 رکورد)
    private List<vwPersonStatusCurrent> ReportRecords { get; set; }
    private string SandoghName = "";

    private bool isTransactionTableStarted = false;
    protected override async Task OnInitializedAsync()
    {

        ReportRecords = _Db.vwPersonStatusCurrent.OrderByDescending(p => p.DelayGst).ThenBy(p => p.Moaref).ToList();

        SandoghName = SandoghService.GetSandoghName();
    }
    private bool isButtonVisible = true;

    private MudTheme myTheme = new MudTheme()
        {
            Typography = new Typography()
            {
                Default = new Default()
                {
                    FontFamily = ["Vazir UI", "sans-serif"]

                }
            }
        };
    // رکورد ست شامل اطلاعات هر شخص

    // دستور چاپ با استفاده از JSInterop
    private async Task PrintReport()
    {
        isButtonVisible = !isButtonVisible;
        StateHasChanged();
        await Task.Delay(1000);
        await JSRuntime.InvokeVoidAsync("window.printAndRedirect", "/", 500);
    }
    private void OnPageChanged(int page)
    {
        var i = 1;

    }



}
