// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace VamBlazor.Client.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250123142223_init-1")]
    partial class init1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("SQL_Latin1_General_CP1256_CI_AS")
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VamBlazor.Client.Domain.Entities.Amalkard", b =>
                {
                    b.Property<string>("Date")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .HasColumnName("date")
                        .IsFixedLength();

                    b.Property<long?>("Mandeh")
                        .HasColumnType("bigint")
                        .HasColumnName("mandeh");

                    b.ToTable("AMALKARD", (string)null);
                });

            modelBuilder.Entity("VamBlazor.Client.Domain.Entities.AmalkardView", b =>
                {
                    b.Property<string>("Babat")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long?>("Bed")
                        .HasColumnType("bigint")
                        .HasColumnName("bed");

                    b.Property<long?>("Bes")
                        .HasColumnType("bigint")
                        .HasColumnName("bes");

                    b.Property<string>("Date")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("date")
                        .IsFixedLength();

                    b.Property<int>("Karmozd")
                        .HasColumnType("int");

                    b.Property<string>("Pcode")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("PCode")
                        .IsFixedLength();

                    b.Property<string>("Tbl")
                        .IsRequired()
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)");

                    b.ToTable((string)null);

                    b.ToView("Amalkard_View", (string)null);
                });

            modelBuilder.Entity("VamBlazor.Client.Domain.Entities.AmalkardViewGroup", b =>
                {
                    b.Property<long?>("Bed")
                        .HasColumnType("bigint")
                        .HasColumnName("bed");

                    b.Property<long?>("Bes")
                        .HasColumnType("bigint")
                        .HasColumnName("bes");

                    b.Property<string>("Date")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("date")
                        .IsFixedLength();

                    b.Property<int>("Karmozd")
                        .HasColumnType("int");

                    b.Property<string>("Pcode")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("PCode")
                        .IsFixedLength();

                    b.Property<string>("Tbl")
                        .IsRequired()
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)");

                    b.ToTable((string)null);

                    b.ToView("Amalkard_View_Group", (string)null);
                });

            modelBuilder.Entity("VamBlazor.Client.Domain.Entities.Bank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BankName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Banks");
                });

            modelBuilder.Entity("VamBlazor.Client.Domain.Entities.Dargst", b =>
                {
                    b.Property<int>("ReqNo")
                        .HasColumnType("int")
                        .HasColumnName("req_no");

                    b.Property<byte>("GstNo")
                        .HasColumnType("tinyint")
                        .HasColumnName("gst_no");

                    b.Property<string>("DateG")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("date_g")
                        .HasDefaultValueSql("(space((1)))")
                        .IsFixedLength();

                    b.Property<string>("DateP")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("date_p")
                        .HasDefaultValueSql("(space((1)))")
                        .IsFixedLength();

                    b.Property<long?>("Gstmblg")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnName("gstmblg");

                    b.Property<long?>("Pasandaz")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnName("pasandaz");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("(space((1)))")
                        .IsFixedLength();

                    b.HasKey("ReqNo", "GstNo");

                    b.ToTable("DARGST", null, t =>
                        {
                            t.HasTrigger("DargstTriger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("VamBlazor.Client.Domain.Entities.Hesab", b =>
                {
                    b.Property<long>("HesabNo")
                        .HasColumnType("bigint")
                        .HasColumnName("hesab_no");

                    b.Property<long?>("Curqty")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0m)
                        .HasColumnName("curqty");

                    b.Property<string>("Date")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("date")
                        .IsFixedLength();

                    b.Property<long?>("Firstqty")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0m)
                        .HasColumnName("firstqty");

                    b.Property<long?>("IdDi")
                        .HasColumnType("bigint")
                        .HasColumnName("id___di");

                    b.Property<long?>("Monthqty")
                        .HasColumnType("bigint")
                        .HasColumnName("monthqty");

                    b.Property<long?>("P")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnName("p");

                    b.Property<long?>("P1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnName("p1");

                    b.Property<string>("Pcode")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("pcode")
                        .IsFixedLength();

                    b.Property<string>("Scode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("scode")
                        .IsFixedLength();

                    b.HasKey("HesabNo");

                    b.ToTable("HESAB", null, t =>
                        {
                            t.HasTrigger("AddNewQvam");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("VamBlazor.Client.Domain.Entities.MojodiMandehVam", b =>
                {
                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("code")
                        .IsFixedLength();

                    b.Property<string>("Fam")
                        .HasMaxLength(74)
                        .HasColumnType("nvarchar(74)");

                    b.Property<long?>("HesabNo")
                        .HasColumnType("bigint")
                        .HasColumnName("Hesab_no");

                    b.Property<long?>("MandehVam")
                        .HasColumnType("bigint");

                    b.Property<long>("Mojodi")
                        .HasColumnType("bigint");

                    b.Property<string>("Sex")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("sex")
                        .IsFixedLength();

                    b.Property<string>("StartDate")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength();

                    b.ToTable((string)null);

                    b.ToView("MojodiMandehVam", (string)null);
                });

            modelBuilder.Entity("VamBlazor.Client.Domain.Entities.Pardar", b =>
                {
                    b.Property<long>("IdDi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id___di");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdDi"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("action")
                        .IsFixedLength();

                    b.Property<string>("Babat")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("babat")
                        .HasDefaultValueSql("(space((1)))");

                    b.Property<string>("Date")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("date")
                        .IsFixedLength();

                    b.Property<string>("Khayer")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasDefaultValueSql("(space((1)))")
                        .IsFixedLength();

                    b.Property<long?>("Mblg")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0m)
                        .HasColumnName("mblg");

                    b.Property<string>("Pcode")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("pcode")
                        .IsFixedLength();

                    b.Property<string>("ReqNo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("req_no")
                        .HasDefaultValueSql("(space((1)))")
                        .IsFixedLength();

                    b.Property<string>("Scode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasDefaultValue("01")
                        .HasColumnName("scode")
                        .IsFixedLength();

                    b.HasKey("IdDi");

                    b.HasIndex(new[] { "Date", "Pcode", "Action" }, "IX_PARDAR");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex(new[] { "Date", "Pcode", "Action" }, "IX_PARDAR"));

                    b.ToTable("PARDAR", null, t =>
                        {
                            t.HasTrigger("PardarTrigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("VamBlazor.Client.Domain.Entities.Person", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("code")
                        .IsFixedLength();

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("address");

                    b.Property<int?>("BankType")
                        .HasColumnType("int");

                    b.Property<string>("CardBank")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)");

                    b.Property<string>("City")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("city")
                        .IsFixedLength();

                    b.Property<string>("Family")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("family");

                    b.Property<string>("Father")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("father");

                    b.Property<string>("HesabBank")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)");

                    b.Property<long>("IdDi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id___di");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdDi"));

                    b.Property<string>("IssueNo")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("issue_no")
                        .IsFixedLength();

                    b.Property<string>("Mellicode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("mellicode")
                        .IsFixedLength();

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("name");

                    b.Property<string>("Sex")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("sex")
                        .IsFixedLength();

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("((1))")
                        .IsFixedLength();

                    b.Property<string>("Tel")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("tel");

                    b.HasKey("Code");

                    b.ToTable("PERSON", (string)null);
                });

            modelBuilder.Entity("VamBlazor.Client.Domain.Entities.PersonStatusView", b =>
                {
                    b.Property<string>("Babat")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Date")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("date")
                        .IsFixedLength();

                    b.Property<string>("Fam")
                        .HasMaxLength(78)
                        .HasColumnType("nvarchar(78)");

                    b.Property<long?>("GstPaid")
                        .HasColumnType("bigint");

                    b.Property<long?>("HesabNo")
                        .HasColumnType("bigint")
                        .HasColumnName("Hesab_no");

                    b.Property<int?>("Karmozd")
                        .HasColumnType("int")
                        .HasColumnName("karmozd");

                    b.Property<long?>("Pasandaz")
                        .HasColumnType("bigint");

                    b.Property<string>("Pcode")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("PCode")
                        .IsFixedLength();

                    b.Property<string>("Sex")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("sex")
                        .IsFixedLength();

                    b.Property<string>("SexTitle")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<long?>("Vam")
                        .HasColumnType("bigint");

                    b.ToTable((string)null);

                    b.ToView("Person_Status_View", (string)null);
                });

            modelBuilder.Entity("VamBlazor.Client.Domain.Entities.Pvam", b =>
                {
                    b.Property<int>("ReqNo")
                        .HasColumnType("int")
                        .HasColumnName("req_no");

                    b.Property<string>("DateD")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("date_d")
                        .IsFixedLength();

                    b.Property<string>("DateG")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("date_g")
                        .IsFixedLength();

                    b.Property<long?>("Gst1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnName("gst1");

                    b.Property<long?>("Gst2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnName("gst2");

                    b.Property<byte?>("GstNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0)
                        .HasColumnName("gst_no");

                    b.Property<int?>("GstPay")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("gst_pay");

                    b.Property<string>("Lastdate")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("lastdate")
                        .IsFixedLength();

                    b.Property<int?>("Mblgmain")
                        .HasColumnType("int")
                        .HasColumnName("mblgmain");

                    b.Property<long?>("Mblgvam")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnName("mblgvam");

                    b.Property<int?>("Mkarmozd")
                        .HasColumnType("int")
                        .HasColumnName("mkarmozd");

                    b.Property<int?>("Pkarmozd")
                        .HasColumnType("int")
                        .HasColumnName("pkarmozd");

                    b.Property<string>("Sabtdate")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("sabtdate")
                        .IsFixedLength();

                    b.Property<string>("Scode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasDefaultValue("01")
                        .HasColumnName("scode")
                        .IsFixedLength();

                    b.Property<string>("Status")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("status")
                        .IsFixedLength();

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("type")
                        .IsFixedLength();

                    b.HasKey("ReqNo");

                    b.ToTable("PVAM", null, t =>
                        {
                            t.HasTrigger("PVamTrigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("VamBlazor.Client.Domain.Entities.Qvam", b =>
                {
                    b.Property<int>("ReqNo")
                        .HasColumnType("int")
                        .HasColumnName("REQ_NO");

                    b.Property<string>("Date")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("DATE");

                    b.Property<long?>("Mblg")
                        .HasColumnType("bigint")
                        .HasColumnName("MBLG");

                    b.Property<string>("Pcode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("PCODE")
                        .IsFixedLength();

                    b.Property<string>("Sabtdate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("SABTDATE")
                        .HasDefaultValueSql("(space((8)))");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("STATUS")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Type")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("TYPE")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("ReqNo");

                    b.ToTable("QVAM", (string)null);
                });

            modelBuilder.Entity("VamBlazor.Client.Domain.Entities.Sandogh", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("code")
                        .IsFixedLength();

                    b.Property<long?>("Curqty")
                        .HasColumnType("bigint")
                        .HasColumnName("curqty");

                    b.Property<long?>("Etebar")
                        .HasColumnType("bigint")
                        .HasColumnName("etebar");

                    b.Property<long?>("Firstqty")
                        .HasColumnType("bigint")
                        .HasColumnName("firstqty");

                    b.Property<long?>("Maxetebar")
                        .HasColumnType("bigint")
                        .HasColumnName("maxetebar");

                    b.Property<string>("Onvan")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("char(30)")
                        .HasColumnName("onvan")
                        .IsFixedLength();

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("type")
                        .IsFixedLength();

                    b.ToTable("SANDOGH", (string)null);
                });

            modelBuilder.Entity("VamBlazor.Client.Domain.Entities.SpecificDate", b =>
                {
                    b.Property<string>("Babat")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long?>("Bed")
                        .HasColumnType("bigint")
                        .HasColumnName("bed");

                    b.Property<long?>("Bes")
                        .HasColumnType("bigint")
                        .HasColumnName("bes");

                    b.Property<string>("Date")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("date")
                        .IsFixedLength();

                    b.Property<string>("Pcode")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("PCode")
                        .IsFixedLength();

                    b.Property<string>("Tbl")
                        .IsRequired()
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)");

                    b.ToTable((string)null);

                    b.ToView("specificDate", (string)null);
                });

            modelBuilder.Entity("VamBlazor.Client.Domain.Entities.SystemUser", b =>
                {
                    b.Property<bool?>("Anbar")
                        .HasColumnType("bit");

                    b.Property<bool>("Control")
                        .HasColumnType("bit");

                    b.Property<bool>("Energy")
                        .HasColumnType("bit");

                    b.Property<string>("Id")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .HasColumnName("id")
                        .IsFixedLength();

                    b.Property<bool>("Lab")
                        .HasColumnType("bit");

                    b.Property<bool>("Shab")
                        .HasColumnType("bit");

                    b.Property<bool>("Sobh")
                        .HasColumnType("bit");

                    b.Property<bool>("Tolid")
                        .HasColumnType("bit");

                    b.Property<bool>("Vahed1")
                        .HasColumnType("bit");

                    b.Property<bool>("Vahed2")
                        .HasColumnType("bit");

                    b.Property<bool?>("Vahed3")
                        .HasColumnType("bit");

                    b.Property<bool>("Zohr")
                        .HasColumnType("bit");

                    b.ToTable("SystemUsers");
                });

            modelBuilder.Entity("VamBlazor.Client.Domain.Entities.TotalAghsat", b =>
                {
                    b.Property<string>("DateG")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("date_g")
                        .IsFixedLength();

                    b.Property<string>("DateP")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("date_p")
                        .IsFixedLength();

                    b.Property<long?>("Gstmblg")
                        .HasColumnType("bigint")
                        .HasColumnName("gstmblg");

                    b.Property<long>("HesabNo")
                        .HasColumnType("bigint")
                        .HasColumnName("hesab_no");

                    b.Property<string>("Pcode")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("PCODE")
                        .IsFixedLength();

                    b.Property<int>("ReqNo")
                        .HasColumnType("int")
                        .HasColumnName("req_no");

                    b.ToTable((string)null);

                    b.ToView("Total_Aghsat", (string)null);
                });

            modelBuilder.Entity("VamBlazor.Client.Domain.Entities.TotalVam", b =>
                {
                    b.Property<string>("DateD")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("date_d")
                        .IsFixedLength();

                    b.Property<string>("DateG")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("date_g")
                        .IsFixedLength();

                    b.Property<string>("DateReq")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<long?>("Gst1")
                        .HasColumnType("bigint")
                        .HasColumnName("gst1");

                    b.Property<long?>("Gst2")
                        .HasColumnType("bigint")
                        .HasColumnName("gst2");

                    b.Property<byte?>("GstNo")
                        .HasColumnType("tinyint")
                        .HasColumnName("gst_no");

                    b.Property<int?>("GstPay")
                        .HasColumnType("int")
                        .HasColumnName("gst_pay");

                    b.Property<long?>("MblgPaid")
                        .HasColumnType("bigint");

                    b.Property<long?>("MblgReq")
                        .HasColumnType("bigint");

                    b.Property<int?>("Mblgmain")
                        .HasColumnType("int")
                        .HasColumnName("mblgmain");

                    b.Property<long?>("Mblgvam")
                        .HasColumnType("bigint")
                        .HasColumnName("mblgvam");

                    b.Property<int?>("Mkarmozd")
                        .HasColumnType("int")
                        .HasColumnName("mkarmozd");

                    b.Property<string>("Pcode")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("PCODE")
                        .IsFixedLength();

                    b.Property<int?>("Pkarmozd")
                        .HasColumnType("int")
                        .HasColumnName("pkarmozd");

                    b.Property<int>("ReqNo")
                        .HasColumnType("int")
                        .HasColumnName("req_no");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("type")
                        .IsFixedLength();

                    b.ToTable((string)null);

                    b.ToView("Total_Vams", (string)null);
                });

            modelBuilder.Entity("VamBlazor.Client.Domain.Entities.User", b =>
                {
                    b.Property<string>("Access")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .IsFixedLength();

                    b.Property<string>("EndTime")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .IsFixedLength();

                    b.Property<string>("Id")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .IsFixedLength();

                    b.Property<string>("Menu1Option")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .IsFixedLength();

                    b.Property<string>("Menu2Option")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .IsFixedLength();

                    b.Property<string>("Menu3Option")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .IsFixedLength();

                    b.Property<string>("Menu4Option")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .IsFixedLength();

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Password")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength();

                    b.Property<string>("StartTime")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .IsFixedLength();

                    b.Property<string>("SubMenu1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .IsFixedLength();

                    b.Property<string>("SubMenu2")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .IsFixedLength();

                    b.Property<string>("SubMenu3")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .IsFixedLength();

                    b.Property<string>("SubMenu4")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .IsFixedLength();

                    b.Property<string>("ToolBar")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .IsFixedLength();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("VamBlazor.Client.Domain.Entities.UsersLog", b =>
                {
                    b.Property<string>("ActionDate")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("actionDate")
                        .IsFixedLength();

                    b.Property<string>("ActionTime")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .IsFixedLength();

                    b.Property<string>("Id")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .HasColumnName("id")
                        .IsFixedLength();

                    b.Property<string>("Station")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .HasColumnName("station")
                        .IsFixedLength();

                    b.Property<string>("Status")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("status");

                    b.Property<string>("System")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .IsFixedLength();

                    b.ToTable("UsersLog", (string)null);
                });

            modelBuilder.Entity("VamBlazor.Client.Domain.Entities.tblDate", b =>
                {
                    b.Property<DateTime>("GDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("GDay")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("GMonthLen")
                        .HasColumnType("tinyint");

                    b.Property<string>("GMonthName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GMonthNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GWeekDayName")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<byte?>("GWeekDayNo")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("GWeekNo")
                        .HasColumnType("tinyint");

                    b.Property<string>("GYear")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("GYrMth")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("HDate")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<byte?>("HDay")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("HMonthLen")
                        .HasColumnType("tinyint");

                    b.Property<string>("HMonthName")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("HMonthNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HWeekDayName")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<byte?>("HWeekDayNo")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("HWeekNo")
                        .HasColumnType("tinyint");

                    b.Property<string>("HYear")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("HYrMth")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.HasKey("GDate");

                    b.ToTable("tblDate10", (string)null);
                });

            modelBuilder.Entity("VamBlazor.Client.Domain.Entities.vwPersonFullData", b =>
                {
                    b.Property<string>("City")
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("CityDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CurQty")
                        .HasColumnType("bigint");

                    b.Property<string>("DDateG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DDateP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("DGstNo")
                        .HasColumnType("tinyint");

                    b.Property<int?>("DReqNo")
                        .HasColumnType("int");

                    b.Property<string>("DStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("FirstQty")
                        .HasColumnType("bigint");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Gst1")
                        .HasColumnType("bigint");

                    b.Property<long?>("Gst2")
                        .HasColumnType("bigint");

                    b.Property<string>("GstMblg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("HesabNo")
                        .HasColumnType("bigint");

                    b.Property<int?>("MKarmozd")
                        .HasColumnType("int");

                    b.Property<long?>("Mblg")
                        .HasColumnType("bigint");

                    b.Property<int?>("MblgMain")
                        .HasColumnType("int");

                    b.Property<long?>("MblgVam")
                        .HasColumnType("bigint");

                    b.Property<long?>("Moaref")
                        .HasColumnType("bigint");

                    b.Property<long?>("Mojodi")
                        .HasColumnType("bigint");

                    b.Property<long?>("MonthQty")
                        .HasColumnType("bigint");

                    b.Property<string>("PDateG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("PGstNo")
                        .HasColumnType("tinyint");

                    b.Property<int?>("PGstPay")
                        .HasColumnType("int");

                    b.Property<int?>("PKarmozd")
                        .HasColumnType("int");

                    b.Property<int?>("PReqNo")
                        .HasColumnType("int");

                    b.Property<string>("PSabtDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PStatus")
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("PType")
                        .HasColumnType("nvarchar(1)");

                    b.Property<long?>("Pasandaz")
                        .HasColumnType("bigint");

                    b.Property<string>("Pcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("QReqNo")
                        .HasColumnType("int");

                    b.Property<string>("QSabtDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QType")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("QTypeDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("SexDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("StatusDesc")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("vwPersonFullData", (string)null);
                });

            modelBuilder.Entity("VamBlazor.Client.Domain.Entities.vwPersonLastGst", b =>
                {
                    b.Property<string>("City")
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentGstDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CurrentGstMblg")
                        .HasColumnType("bigint");

                    b.Property<byte?>("CurrentGstNo")
                        .HasColumnType("tinyint");

                    b.Property<string>("CurrentPaidDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("GstNo")
                        .HasColumnType("tinyint");

                    b.Property<int?>("GstPay")
                        .HasColumnType("int");

                    b.Property<long?>("HesabNo")
                        .HasColumnType("bigint");

                    b.Property<string>("LastDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MKarmozd")
                        .HasColumnType("int");

                    b.Property<long?>("MblgVam")
                        .HasColumnType("bigint");

                    b.Property<long?>("Mojodi")
                        .HasColumnType("bigint");

                    b.Property<long?>("MonthQty")
                        .HasColumnType("bigint");

                    b.Property<int?>("PKarmozd")
                        .HasColumnType("int");

                    b.Property<long?>("PaidVam")
                        .HasColumnType("bigint");

                    b.Property<int?>("ReqNo")
                        .HasColumnType("int");

                    b.Property<string>("Sex")
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.ToTable((string)null);

                    b.ToView("vwPersonLastGst", (string)null);
                });

            modelBuilder.Entity("VamBlazor.Client.Domain.Entities.Dargst", b =>
                {
                    b.HasOne("VamBlazor.Client.Domain.Entities.Pvam", "ReqNoNavigation")
                        .WithMany("Dargsts")
                        .HasForeignKey("ReqNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_DARGST_PVAM");

                    b.Navigation("ReqNoNavigation");
                });

            modelBuilder.Entity("VamBlazor.Client.Domain.Entities.Pvam", b =>
                {
                    b.HasOne("VamBlazor.Client.Domain.Entities.Qvam", "ReqNoNavigation")
                        .WithOne("Pvam")
                        .HasForeignKey("VamBlazor.Client.Domain.Entities.Pvam", "ReqNo")
                        .IsRequired()
                        .HasConstraintName("FK_PVAM_QVAM");

                    b.Navigation("ReqNoNavigation");
                });

            modelBuilder.Entity("VamBlazor.Client.Domain.Entities.Pvam", b =>
                {
                    b.Navigation("Dargsts");
                });

            modelBuilder.Entity("VamBlazor.Client.Domain.Entities.Qvam", b =>
                {
                    b.Navigation("Pvam");
                });
#pragma warning restore 612, 618
        }
    }
}
